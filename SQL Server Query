USE [PortfolioProjectsdb];
GO
--- Inspecting Data		
SELECT * FROM [dbo].[sales_data_sample]

---Checking Unique Values
SELECT DISTINCT STATUS FROM [dbo].[sales_data_sample]
SELECT DISTINCT YEAR_ID FROM [dbo].[sales_data_sample]
SELECT DISTINCT PRODUCTLINE FROM [dbo].[sales_data_sample]
SELECT DISTINCT COUNTRY FROM [dbo].[sales_data_sample]
SELECT DISTINCT DEALSIZE FROM [dbo].[sales_data_sample]
SELECT DISTINCT PRODUCTLINE FROM [dbo].[sales_data_sample]
SELECT DISTINCT TERRITORY FROM [dbo].[sales_data_sample]

SELECT DISTINCT MONTH_ID FROM [dbo].[sales_data_sample]
WHERE YEAR_ID= 2003

---Analysis
---Grouping Sales by Productline 

SELECT PRODUCTLINE , SUM(sales) Revenue 
FROM [dbo].[sales_data_sample]
GROUP BY PRODUCTLINE
ORDER BY 2 desc

SELECT YEAR_ID, SUM(sales) Revenue
From [dbo].[sales_data_sample]
GROUP BY YEAR_ID
ORDER BY 2 DESC

SELECT DEALSIZE , SUM(sales) Revenue
From [dbo].[sales_data_sample]
Group by DEALSIZE 
ORDER BY 2 DESC

SELECT MONTH_ID , SUM(sales) Revenue , COUNT(ORDERNUMBER) Frequency 
From [dbo].[sales_data_sample]
Where YEAR_ID = 2004
GROUP BY MONTH_ID
ORDER BY 2 DESC

SELECT MONTH_ID , SUM(sales) Revenue , COUNT(ORDERNUMBER) Frequency 
From [dbo].[sales_data_sample]
Where YEAR_ID = 2003
GROUP BY MONTH_ID
ORDER BY 2 DESC

SELECT MONTH_ID , SUM(sales) Revenue , COUNT(ORDERNUMBER) Frequency 
From [dbo].[sales_data_sample]
Where YEAR_ID = 2005
GROUP BY MONTH_ID
ORDER BY 2 DESC

SELECT MONTH_ID ,PRODUCTLINE, SUM(sales) Revenue , COUNT(ORDERNUMBER)  
From [dbo].[sales_data_sample]
Where YEAR_ID = 2004 AND MONTH_ID = 11
GROUP BY MONTH_ID , PRODUCTLINE
ORDER BY 3 DESC

SELECT MONTH_ID ,PRODUCTLINE, SUM(sales) Revenue , COUNT(ORDERNUMBER)  
From [dbo].[sales_data_sample]
Where YEAR_ID = 2003 AND MONTH_ID = 11
GROUP BY MONTH_ID , PRODUCTLINE
ORDER BY 3 DESC

SELECT MONTH_ID ,PRODUCTLINE, SUM(sales) Revenue , COUNT(ORDERNUMBER)  
From [dbo].[sales_data_sample]
Where YEAR_ID = 2005 AND MONTH_ID = 5
GROUP BY MONTH_ID , PRODUCTLINE
ORDER BY 3 DESC

---Recency Frequency Monetary Analysis 
DROP TABLE IF EXISTS #rfm
;with rfm as 
(
	select 
		CUSTOMERNAME, 
		sum(sales) MonetaryValue,
		avg(sales) AvgMonetaryValue,
		count(ORDERNUMBER) Frequency,
		max(ORDERDATE) last_order_date,
		(select max(ORDERDATE) from [dbo].[sales_data_sample]) max_order_date,
		DATEDIFF(DD, max(ORDERDATE), (select max(ORDERDATE) from [dbo].[sales_data_sample])) Recency
	from [dbo].[sales_data_sample]
	group by CUSTOMERNAME
),
rfm_calc as
(

	select r.*,
		NTILE(4) OVER (order by Recency desc) rfm_recency,
		NTILE(4) OVER (order by Frequency) rfm_frequency,
		NTILE(4) OVER (order by MonetaryValue) rfm_monetary
	from rfm r
)
select 
	c.*, rfm_recency+ rfm_frequency+ rfm_monetary as rfm_cell,
	cast(rfm_recency as varchar) + cast(rfm_frequency as varchar) + cast(rfm_monetary  as varchar)rfm_cell_string
into #rfm
from rfm_calc c

select CUSTOMERNAME , rfm_recency, rfm_frequency, rfm_monetary,
	case 
		when rfm_cell_string in (111, 112 , 121, 122, 123, 132, 211, 212, 114, 141) then 'lost_customers'  
		when rfm_cell_string in (133, 134, 143, 244, 334, 343, 344, 144) then 'slipping away, cannot lose'
		when rfm_cell_string in (311, 411, 331) then 'new customers'
		when rfm_cell_string in (222, 223, 233, 322) then 'potential churners'
		when rfm_cell_string in (323, 333,321, 422, 332, 432) then 'active' 
		when rfm_cell_string in (433, 434, 443, 444) then 'loyal'
	end rfm_segment

from #rfm

select distinct OrderNumber, stuff(

	(select ',' + PRODUCTCODE
	from [dbo].[sales_data_sample] p
	where ORDERNUMBER in 
		(

			select ORDERNUMBER
			from (
				select ORDERNUMBER, count(*) rn
				FROM [dbo].[sales_data_sample]
				where STATUS = 'Shipped'
				group by ORDERNUMBER
			)m
			where rn = 3
		)
		and p.ORDERNUMBER = s.ORDERNUMBER
		for xml path (''))

		, 1, 1, '') ProductCodes

from [dbo].[sales_data_sample] s
order by 2 desc

select COUNTRY, sum (sales) Revenue
from [dbo].[sales_data_sample]

group by COUNTRY
order by 2 desc

select city, sum (sales) Revenue
from [dbo].[sales_data_sample]
where country = 'UK'
group by city
order by 2 desc

select country, YEAR_ID, PRODUCTLINE, sum(sales) Revenue
from [dbo].[sales_data_sample]
where country = 'USA'
group by  country, YEAR_ID, PRODUCTLINE
